a = ''.join('''CPPGCCSFKELCYLCCWRPQCMKYVMTGICQNSIWIDNEIFYKDMADWMAYYRFIDFHYP
GFFLWLQWDWVKNCTSMGNHFGYQRATCIAFYFAFPCDSYKPWMMMKQSMPSCPNPLLVA
PHCHLRFRTAATIPNWSVEEYFAIWPPFPVQYQDGGEPYNKWNVGDRMWFQHPFNISSLM
WGQGIWNSYIKCHGASEQFERMMLEAPLRLQPKWCFKTQHGRWLATCQGKDHLFRACTTC
CWARRMFEPMKPFKCFVPTWFITSLASFMWHCFKKQEMHRHCGGPLKKFEPVWWVEVASF
YASMLKDQHEMAFPPIMTRSKEIPWGQCCKYDQYKMRTFFCPCEWGQVISQKVFEDYSWD
PKDYEESNVMYKRAIAAQCSNCIRRAIPHVFLKFIMAIMSWAACGPFHQDVKPPCPVLCH
LNTRYQPNLMSPFFFYCTEPGDHCIALTFFRQEWESWENNWCDRFMPGSKNKWNYIHECC
HWWGWPLCIGHCVRSEGLRWRMICRCPKEVSMLPGEPFPKWILYWKPEYPVGYHTMVCEQ
ATGVAWLCFDERNVAPAKVIYMVQADYIYCTPMRIIILVTCCLLIAYIQEYGKIWVKQDQ
IPFRFSHMSYNGYHEPATDFAVFHHDAMYHDANASFLVCEWYAMWSQCAEMYVEVPAMCK
EPSIKNDRARKLGTQLYRDVYFYKNHIFYKLNVINLSKVMIYFWWPSTDWQEKFAQKMIS
QSQICMMPLMDKSADHSPFYYTDEYFHGVTAQDAFMYQMMEYTFLCCCHYADLDYYYSLI
NHRHACQYHTFIQIITLNVMYLSHLTMFHMMSRAQHTIMGGWQMPFDPWVSAHIDGFVPQ
CEYR'''.split())

b = ''.join('''CPPGCCSFKWYIAQHHRDLCRLQCMKYVMTGICQNSIWIDNLVVSKPIFYKDCADWFCTR
MARFIDFPGFFTYFDIHRNQRATCIQFLFAGPCDFVSYKPWMMYYMFQVEDIQKAQSMPS
CPNALLVAPHCHLRLRTAATIPNWSVEPFPVPPYRKRYSKMDMVGDLKNSHPFNISSLMW
GIGIWNSCHYKPIKCHDAFGEQFERMMLECFKCQHGRWLATCQDKDSNIDPELARRVFEP
NNPFKPVKVCFVPTWFITSKVSNMWHCISAKTVCKTMHRHRNRFSVQSFYASMLKDQHEM
AFPPIMTRTQNTKEFMKPPWGQCCKYPSQYKMRTFDAHKDFGGQVCSQAVFEDYSWDPTD
YEKSNVEYKRIAAQCSNCIRRAIPHVFLKFIDAIGIYGAICGSFHQDMVTKWALRMKPPC
PVLCHLNTRYQPNLMSPFWFYCTEPEDHCIALTFGRQEWESLGMMTKMLENNWMWPHWCH
RFMPGSKQWKKSTRMKWNYIHECCHRWGWPLCHKAHKLGHCVIQPANNVVHCRCPKEVAM
GPGVPLYWKPERGVVGYHTMVCQALDINDQQMRQTICDLLCGGVAWLCFDERNVAPRQKV
IYPVQADYIYATFQRINNILVTMHWWWLTKRHGSGHFKIWVKQRQIPFRFSHMYYNGCIW
CSVIKPAVYHHFNASWSVCELYAMDCAEMYVHVPAMCKEPSIKNDRARKLGTKNHIFYKL
CVINLSKPLKGTKKRFINAVEVFAQKMMSQSQICMMPWMADHSTELTYCTDEYFHGQFMY
QMMELLCCQHYTLDYVYSLINHRHKCSLHWWHCRIQIITLSQKDNVMYLSHLTMFHMMSR
AQHMGGWQMPFDPWCIYLNAHHDGFVPQCEYR'''.split())

#edit distance
t=[[]]
for n in range(len(b)+1):
    t[0].append(n)
for i in range(1, len(a)+1):
    t.append([i] + [0]*len(b))
    for j in range(1, len(b)+1):
        if a[i-1] == b[j-1]:
            t[i][j] = t[i-1][j-1]
        else:
            t[i][j] = min(t[i-1][j], t[i][j-1], t[i-1][j-1]) + 1

#count alignments    
def alignment(i, j, s, t=t):
    if s[i][j] != 0:
        return s[i][j]
    if i == 0 or j == 0:
        return 1
    x=0
    y=0
    z=0
    if a[i-1] == b[j-1] or t[i][j] == t[i-1][j-1] + 1:
        x = alignment(i-1, j-1, s)
    if t[i][j] == t[i][j-1] + 1:
        y = alignment(i, j-1, s)
    if t[i][j] == t[i-1][j] + 1:
        z = alignment(i-1, j, s)
    s[i][j] = x + y + z
    return x + y + z

#input
s=[[]]
for n in range(len(b)+1):
    s[0].append(0)
for i in range(1, len(a)+1):
    s.append([0] * (len(b)+1))

print(alignment(i=len(a), j=len(b), s=s) % 134217727)
