mass  = """A   71.03711
C   103.00919
D   115.02694
E   129.04259
F   147.06841
G   57.02146
H   137.05891
I   113.08406
K   128.09496
L   113.08406
M   131.04049
N   114.04293
P   97.05276
Q   128.05858
R   156.10111
S   87.03203
T   101.04768
V   99.06841
W   186.07931
Y   163.06333""".split("\n")
aa={}
for a in mass:
    aa[int(float(a.split()[1]))] = a.split()[0]

S = '20 11 18 10 -13 18 24 29 15 -3 0 18 9 20 26 21 -8 -10 -8 16 -5 20 -18 -16 13 23 2 -9 27 14 7 22 -16 -4 -4 -1 29 11 -13 -7 -12 9 27 10 -1 10 -13 -10 3 5 7 1 -16 16 -8 29 -10 11 9 -13 12 8 7 0 7 25 -11 -4 -3 12 27 -6 -20 -7 14 22 7 13 -11 -14 -1 9 -3 -14 6 4 4 -18 27 18 -16 0 18 -18 9 14 -16 -1 7 -20 -15 6 8 6 27 17 5 0 0 8 27 -14 -1 -9 3 8 1 10 12 -20 16 18 10 4 2 -3 -13 8 5 -16 16 -18 23 29 22 -19 23 -12 29 4 -18 -5 18 20 -12 26 -13 22 11 22 -16 -4 -3 18 27 8 5 15 -13 24 5 15 -17 18 19 -4 1 -12 19 -11 -6 -5 -12 21 27 -11 -20 17 -8 -17 15 7 16 1 20 8 20 19 -8 27 -7 15 8 -7 12 16 -8 -7 -17 14 -12 -8 -19 14 -12 1 20 3 17 18 15 -15 5 10 -1 20 4 15 13 30 8 -13 18 -5 27 -4 -1 -8 16 30 22 2 25 0 9 13 -16 30 11 30 -10 3 -7 8 -11 10 17 16 28 -5 -16 13 -7 23 26 15 13 -9 16 1 29 11 15 -4 5 14 -4 19 2 19 -5 14 23 28 1 1 22 21 -6 13 2 28 20 9 -12 13 3 2 11 6 27 7 30 27 10 20 -16 7 -12 -7 -13 9 8 22 -18 -7 17 17 -13 7 7 -11 10 -1 11 -4 9 25 -19 0 25 -14 4 -10 -4 22 -10 2 -8 20 -20 23 -16 -8 -10 -19 11 30 27 10 -16 -13 20 8 13 7 12 -3 -15 -12 24 -9 4 -20 9 17 -6 -20 -13 2 17 16 20 17 12 -10 -19 -6 14 -8 -13 -11 -7 -10 19 -4 29 15 -18 -15 -1 6 -9 19 -20 -15 -14 19 29 12 -5 23 28 -6 -9 26 -9 26 14 14 -11 17 20 25 25 -7 -17 -11 22 1 9 13 -20 -20 27 -1 -10 24 19 27 8 3 16 24 16 7 14 -12 -15 -9 9 5 19 -7 -9 -16 8 -11 -18 -7 7 -18 9 29 4 6 13 23 27 15 -12 -17 16 -5 19 -6 3 10 14 -1 0 16 -15 7 -18 -10 -19 -15 -13 25 12 10 -1 -18 -7 15 11 22 19 -7 2 -14 17 7 -19 29 29 -5 23 29 30 -1 28 13 -8 -4 -2 27 25 22 26 22 -4 24 -13 14 -11 -9 23 -19 22 -8 22 13 18 -1 -8 4 26 10 6 17 -18 11 -4 13 -12 2 16 25 21 -18 -14 -14 2 24 -18 23 11 -20 13 6 -3 12 -9 -9 25 -20 29 5 16 -17 -7 1 8 23 24 27 14 -16 14 2 7 -9 0 -20 15 25 24 28 1 -14 30 30 6 8 20 27 20 13 22 -15 17 -12 27 -9 -11 11 30 13 -9 5 30 24 -6 24 7 -14 -10 7 -11 19 2 10 2 20 -18 28 19 -9 4 -19 20 30 -11 -2 -9 -10 28 2 -19 20 -9 16 24 22 8 -14 14 -17 27 25 12 5 -11 4 8 5 18 -13 18 21 7 3 25 12 10 -15 28 18 -9 -17 25 -13 10 11 6 30 9 6 7 -16 14 30 -7 15 22 11 29 4 -6 26 -1 -11 4 4 19 -11 -7 26 24 19 8 19 -6 15 1 8 15 -20 -20 29 -1 -15 -12 -12 23 -6 10 -16 18 -13 -15 15 19 15 2 -17 10 -4 -11 -17 3 25 24 20 -20 -16 -10 -2 28 7 -7 -5 18 -17 25 14 -10 -1 14 -13 -3 -4 -12 17 24 -6 -15 -2 -6 27 -17 12 5 8 -4 17 8 -18 -7 14 30 15 -10 28 -13 -18 -18 -9 -7 -12 2 18 28 27 19 20 -8 -19 -12 19 -5 -11 4 3 -1 -3 25 6 -13 16 -12 0 28 13 13 -14 0 -2 -12 3 -12 24 -1 7 8 -7 -10 8 3 -13 -13 11 -9 8 -11 20 -18 27 14 -19 4 28 -16 -18 18 28 -4 -6 13 7 4 -11 2 -5 -20 -4 28 -15 20 23 -12 18 4 -16 30 26 -7 26 8 5 22 23 -20 -1 17 28 8 -8 18 13 -9 -1 29 -14 13 15 2'.split()
s=[]
for n in S:
    s.append(int(n)*(-1))

# create a directed acyclic graph
graph={}        
for i in range(len(s)-1):
    for j in range(i+1, len(s)):
        if i == 0:
            w = j-i+1
        else:
            w = j-i
        if w in aa:
            if i in graph:
                graph[i].append(j)
            else:
                graph[i] = [j]
                
# topsort algorithm
w = [0]
for i in range(len(s)-1):
    w.append(10000)
track = [None] * len(S)

for n in graph:
    for m in graph[n]:
        if w[n]+s[m] < w[m]:
            w[m] = w[n] + s[m]
            track[m] = n

p = [len(w)]
t = track[-1]
while t > 0:
    p.append(t+1)
    t = track[t]

i=0
pep=''
for j in p[::-1]:
    pep += aa[j-i]
    i=j
print(pep)
