dna = 'AGCCCCAACCTAGGGGTCGTTTCCCAAGCATGCGTTCGAGCTCTAGTTCGTCAAGGCATCACTGAGCAGAGATATACGAGTCCTCTAGAGAATCCCTACGTTCTTGTTAAACGGTATAACTGGACAACTAAGGGAACTCCCGCTGGACTCGTCTTGTTGCACCACTATAGGGCCAGCATTACGTTATCAACGGTGTTCTTTAATCCATGATAACAGATGTTTGTGGCCCGCATGTAACCGCTCGAACGTTAATGGGGCCCAAGAATAACGGTACGTTAAACTTCTAATAATTGCTCCACGGACATTGCATGCTGGTTCAGGTTGCAGTGTGCGGCTCTAGTACATAGTCGAAAAGTGCTTTGAACCGCAGTGTAGAGGCAGGTCGAAGAGAATTCTTCAACCCAATGTGTCGCGAAGGGCAGTCATAGCTATGACTGCCCTTCGCGACACATGGACAAAATGGCAGGTTTCGTTCTTCCCCGTCGCTAATGTCACTTTTTACCTTGACTCCTTGAATAGCCCACGTATTACGTGTCTTGCCCTACCTAATAGGGAGGACGCACATAGGGGCATCGCGCACCTGCTGGCGGCTTCCAACACGTTGGGTCCCATCAAATCGACTGGAGAAGTTTGACTCTCTTTTGATGTGCGCTAAACGAAGTGTAGGCCTGGAATACTAGGCTGTGACGCGATGGAGAATTTCGCCATAGTCTAACCGAAGCTATTCCTCCAGGGTTGCCTCTCGGATTGAGTTCGCGCAGGCCGACTTGTGTAGCGTTGCATATTTGGAGGCTGCTTAGTCTTAACGGGACCGGCTTATACTAATGTCACACCAAGACAGACGCAACCACTTTCC'   
dna_revc = dna.replace('A', 't').replace('T', 'a').replace('C', 'g').replace('G', 'c').upper()[::-1]

codon={}
with open("codon.txt") as f1:
    for line in f1:
        n = line.strip().split()
        codon[n[0]] = n[1]
        codon[n[2]] = n[3]
        codon[n[4]] = n[5]
        codon[n[6]] = n[7]

codon2={}
for c,aa in codon.items():
    codon2[c.replace('U', 'T')] = aa

def find_orf(dna):
    orfs=[]
    for i in range(0, len(dna)-2):
        orf=''
        if dna[i:i+3] == 'ATG':
            for n in range(i, len(dna)-2, 3):
                if codon2[dna[n:n+3]] != 'Stop':
                    orf += codon2[dna[n:n+3]]
                else:
                    orfs.append(orf)
                    break
        else:
            continue
    return(orfs)

orfs = find_orf(dna) + find_orf(dna_revc)
for orf in set(orfs):
    print(orf)
